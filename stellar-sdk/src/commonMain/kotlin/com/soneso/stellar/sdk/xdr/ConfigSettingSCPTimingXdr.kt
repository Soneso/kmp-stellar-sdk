// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.soneso.stellar.sdk.xdr

/**
 * XDR Source:
 * struct ConfigSettingSCPTiming {
 *     uint32 ledgerTargetCloseTimeMilliseconds;
 *     uint32 nominationTimeoutInitialMilliseconds;
 *     uint32 nominationTimeoutIncrementMilliseconds;
 *     uint32 ballotTimeoutInitialMilliseconds;
 *     uint32 ballotTimeoutIncrementMilliseconds;
 * };
 */
data class ConfigSettingSCPTimingXdr(
  val ledgerTargetCloseTimeMilliseconds: Uint32Xdr,
  val nominationTimeoutInitialMilliseconds: Uint32Xdr,
  val nominationTimeoutIncrementMilliseconds: Uint32Xdr,
  val ballotTimeoutInitialMilliseconds: Uint32Xdr,
  val ballotTimeoutIncrementMilliseconds: Uint32Xdr
) {
  companion object {

    fun decode(reader: XdrReader): ConfigSettingSCPTimingXdr {
      val ledgerTargetCloseTimeMilliseconds = Uint32Xdr.decode(reader)
      val nominationTimeoutInitialMilliseconds = Uint32Xdr.decode(reader)
      val nominationTimeoutIncrementMilliseconds = Uint32Xdr.decode(reader)
      val ballotTimeoutInitialMilliseconds = Uint32Xdr.decode(reader)
      val ballotTimeoutIncrementMilliseconds = Uint32Xdr.decode(reader)
      return ConfigSettingSCPTimingXdr(ledgerTargetCloseTimeMilliseconds, nominationTimeoutInitialMilliseconds, nominationTimeoutIncrementMilliseconds, ballotTimeoutInitialMilliseconds, ballotTimeoutIncrementMilliseconds)
    }
  }

  fun encode(writer: XdrWriter) {
    ledgerTargetCloseTimeMilliseconds.encode(writer)
    nominationTimeoutInitialMilliseconds.encode(writer)
    nominationTimeoutIncrementMilliseconds.encode(writer)
    ballotTimeoutInitialMilliseconds.encode(writer)
    ballotTimeoutIncrementMilliseconds.encode(writer)
  }
}
