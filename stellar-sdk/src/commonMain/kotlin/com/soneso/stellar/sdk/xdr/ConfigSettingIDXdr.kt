// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.soneso.stellar.sdk.xdr

/**
 * XDR Source:
 * enum ConfigSettingID
 * {
 *     CONFIG_SETTING_CONTRACT_MAX_SIZE_BYTES = 0,
 *     CONFIG_SETTING_CONTRACT_COMPUTE_V0 = 1,
 *     CONFIG_SETTING_CONTRACT_LEDGER_COST_V0 = 2,
 *     CONFIG_SETTING_CONTRACT_HISTORICAL_DATA_V0 = 3,
 *     CONFIG_SETTING_CONTRACT_EVENTS_V0 = 4,
 *     CONFIG_SETTING_CONTRACT_BANDWIDTH_V0 = 5,
 *     CONFIG_SETTING_CONTRACT_COST_PARAMS_CPU_INSTRUCTIONS = 6,
 *     CONFIG_SETTING_CONTRACT_COST_PARAMS_MEMORY_BYTES = 7,
 *     CONFIG_SETTING_CONTRACT_DATA_KEY_SIZE_BYTES = 8,
 *     CONFIG_SETTING_CONTRACT_DATA_ENTRY_SIZE_BYTES = 9,
 *     CONFIG_SETTING_STATE_ARCHIVAL = 10,
 *     CONFIG_SETTING_CONTRACT_EXECUTION_LANES = 11,
 *     CONFIG_SETTING_LIVE_SOROBAN_STATE_SIZE_WINDOW = 12,
 *     CONFIG_SETTING_EVICTION_ITERATOR = 13,
 *     CONFIG_SETTING_CONTRACT_PARALLEL_COMPUTE_V0 = 14,
 *     CONFIG_SETTING_CONTRACT_LEDGER_COST_EXT_V0 = 15,
 *     CONFIG_SETTING_SCP_TIMING = 16
 * };
 */
enum class ConfigSettingIDXdr(val value: Int) {
  CONFIG_SETTING_CONTRACT_MAX_SIZE_BYTES(0),
  CONFIG_SETTING_CONTRACT_COMPUTE_V0(1),
  CONFIG_SETTING_CONTRACT_LEDGER_COST_V0(2),
  CONFIG_SETTING_CONTRACT_HISTORICAL_DATA_V0(3),
  CONFIG_SETTING_CONTRACT_EVENTS_V0(4),
  CONFIG_SETTING_CONTRACT_BANDWIDTH_V0(5),
  CONFIG_SETTING_CONTRACT_COST_PARAMS_CPU_INSTRUCTIONS(6),
  CONFIG_SETTING_CONTRACT_COST_PARAMS_MEMORY_BYTES(7),
  CONFIG_SETTING_CONTRACT_DATA_KEY_SIZE_BYTES(8),
  CONFIG_SETTING_CONTRACT_DATA_ENTRY_SIZE_BYTES(9),
  CONFIG_SETTING_STATE_ARCHIVAL(10),
  CONFIG_SETTING_CONTRACT_EXECUTION_LANES(11),
  CONFIG_SETTING_LIVE_SOROBAN_STATE_SIZE_WINDOW(12),
  CONFIG_SETTING_EVICTION_ITERATOR(13),
  CONFIG_SETTING_CONTRACT_PARALLEL_COMPUTE_V0(14),
  CONFIG_SETTING_CONTRACT_LEDGER_COST_EXT_V0(15),
  CONFIG_SETTING_SCP_TIMING(16);

  companion object {

    fun decode(reader: XdrReader): ConfigSettingIDXdr {
      val value = reader.readInt()
      return entries.find { it.value == value }
        ?: throw IllegalArgumentException("Unknown ConfigSettingIDXdr value: $value")
    }
  }

  fun encode(writer: XdrWriter) {
    writer.writeInt(value)
  }
}
