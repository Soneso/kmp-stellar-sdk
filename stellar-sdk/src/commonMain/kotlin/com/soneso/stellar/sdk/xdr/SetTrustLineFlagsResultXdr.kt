// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.soneso.stellar.sdk.xdr

/**
 * XDR Source:
 * union SetTrustLineFlagsResult switch (SetTrustLineFlagsResultCode code)
 * {
 * case SET_TRUST_LINE_FLAGS_SUCCESS:
 *     void;
 * case SET_TRUST_LINE_FLAGS_MALFORMED:
 * case SET_TRUST_LINE_FLAGS_NO_TRUST_LINE:
 * case SET_TRUST_LINE_FLAGS_CANT_REVOKE:
 * case SET_TRUST_LINE_FLAGS_INVALID_STATE:
 * case SET_TRUST_LINE_FLAGS_LOW_RESERVE:
 *     void;
 * };
 */
sealed class SetTrustLineFlagsResultXdr {
  abstract val discriminant: SetTrustLineFlagsResultCodeXdr

  data class Void(
    override val discriminant: SetTrustLineFlagsResultCodeXdr
  ) : SetTrustLineFlagsResultXdr()

  companion object {

    fun decode(reader: XdrReader): SetTrustLineFlagsResultXdr {
      val discriminant = SetTrustLineFlagsResultCodeXdr.decode(reader)
      return when (discriminant) {
        SetTrustLineFlagsResultCodeXdr.SET_TRUST_LINE_FLAGS_SUCCESS -> Void(discriminant)
        SetTrustLineFlagsResultCodeXdr.SET_TRUST_LINE_FLAGS_MALFORMED -> Void(discriminant)
        SetTrustLineFlagsResultCodeXdr.SET_TRUST_LINE_FLAGS_NO_TRUST_LINE -> Void(discriminant)
        SetTrustLineFlagsResultCodeXdr.SET_TRUST_LINE_FLAGS_CANT_REVOKE -> Void(discriminant)
        SetTrustLineFlagsResultCodeXdr.SET_TRUST_LINE_FLAGS_INVALID_STATE -> Void(discriminant)
        SetTrustLineFlagsResultCodeXdr.SET_TRUST_LINE_FLAGS_LOW_RESERVE -> Void(discriminant)
        else -> throw IllegalArgumentException("Unknown SetTrustLineFlagsResultXdr discriminant: $discriminant")
      }
    }
  }

  fun encode(writer: XdrWriter) {
    discriminant.encode(writer)
    when (this) {
      is Void -> {}
      is Void -> {}
    }
  }
}
