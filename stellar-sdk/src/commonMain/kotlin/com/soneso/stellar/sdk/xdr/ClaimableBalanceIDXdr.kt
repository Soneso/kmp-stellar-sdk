// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.soneso.stellar.sdk.xdr

/**
 * XDR Source:
 * union ClaimableBalanceID switch (ClaimableBalanceIDType type)
 * {
 * case CLAIMABLE_BALANCE_ID_TYPE_V0:
 *     Hash v0;
 * };
 */
sealed class ClaimableBalanceIDXdr {
  abstract val discriminant: ClaimableBalanceIDTypeXdr

  data class V0(
    val value: HashXdr
  ) : ClaimableBalanceIDXdr() {
    override val discriminant: ClaimableBalanceIDTypeXdr = ClaimableBalanceIDTypeXdr.CLAIMABLE_BALANCE_ID_TYPE_V0
  }

  companion object {

    fun decode(reader: XdrReader): ClaimableBalanceIDXdr {
      val discriminant = ClaimableBalanceIDTypeXdr.decode(reader)
      return when (discriminant) {
        ClaimableBalanceIDTypeXdr.CLAIMABLE_BALANCE_ID_TYPE_V0 -> {
          val value = HashXdr.decode(reader)
          V0(value)
        }
        else -> throw IllegalArgumentException("Unknown ClaimableBalanceIDXdr discriminant: $discriminant")
      }
    }
  }

  fun encode(writer: XdrWriter) {
    discriminant.encode(writer)
    when (this) {
      is V0 -> {
        value.encode(writer)
      }
    }
  }
}
