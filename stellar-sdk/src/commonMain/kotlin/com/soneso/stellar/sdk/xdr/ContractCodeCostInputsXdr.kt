// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.soneso.stellar.sdk.xdr

/**
 * XDR Source:
 * struct ContractCodeCostInputs {
 *     ExtensionPoint ext;
 *     uint32 nInstructions;
 *     uint32 nFunctions;
 *     uint32 nGlobals;
 *     uint32 nTableEntries;
 *     uint32 nTypes;
 *     uint32 nDataSegments;
 *     uint32 nElemSegments;
 *     uint32 nImports;
 *     uint32 nExports;
 *     uint32 nDataSegmentBytes;
 * };
 */
data class ContractCodeCostInputsXdr(
  val ext: ExtensionPointXdr,
  val nInstructions: Uint32Xdr,
  val nFunctions: Uint32Xdr,
  val nGlobals: Uint32Xdr,
  val nTableEntries: Uint32Xdr,
  val nTypes: Uint32Xdr,
  val nDataSegments: Uint32Xdr,
  val nElemSegments: Uint32Xdr,
  val nImports: Uint32Xdr,
  val nExports: Uint32Xdr,
  val nDataSegmentBytes: Uint32Xdr
) {
  companion object {

    fun decode(reader: XdrReader): ContractCodeCostInputsXdr {
      val ext = ExtensionPointXdr.decode(reader)
      val nInstructions = Uint32Xdr.decode(reader)
      val nFunctions = Uint32Xdr.decode(reader)
      val nGlobals = Uint32Xdr.decode(reader)
      val nTableEntries = Uint32Xdr.decode(reader)
      val nTypes = Uint32Xdr.decode(reader)
      val nDataSegments = Uint32Xdr.decode(reader)
      val nElemSegments = Uint32Xdr.decode(reader)
      val nImports = Uint32Xdr.decode(reader)
      val nExports = Uint32Xdr.decode(reader)
      val nDataSegmentBytes = Uint32Xdr.decode(reader)
      return ContractCodeCostInputsXdr(ext, nInstructions, nFunctions, nGlobals, nTableEntries, nTypes, nDataSegments, nElemSegments, nImports, nExports, nDataSegmentBytes)
    }
  }

  fun encode(writer: XdrWriter) {
    ext.encode(writer)
    nInstructions.encode(writer)
    nFunctions.encode(writer)
    nGlobals.encode(writer)
    nTableEntries.encode(writer)
    nTypes.encode(writer)
    nDataSegments.encode(writer)
    nElemSegments.encode(writer)
    nImports.encode(writer)
    nExports.encode(writer)
    nDataSegmentBytes.encode(writer)
  }
}
