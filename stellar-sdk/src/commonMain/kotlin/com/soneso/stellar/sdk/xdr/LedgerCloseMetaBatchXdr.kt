// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.soneso.stellar.sdk.xdr

/**
 * XDR Source:
 * struct LedgerCloseMetaBatch
 * {
 *     // starting ledger sequence number in the batch
 *     uint32 startSequence;
 * 
 *     // ending ledger sequence number in the batch
 *     uint32 endSequence;
 * 
 *     // Ledger close meta for each ledger within the batch
 *     LedgerCloseMeta ledgerCloseMetas<>;
 * };
 */
data class LedgerCloseMetaBatchXdr(
  /** starting ledger sequence number in the batch */
  val startSequence: Uint32Xdr,
  /** ending ledger sequence number in the batch */
  val endSequence: Uint32Xdr,
  val ledgerCloseMetas: List<LedgerCloseMetaXdr>
) {
  companion object {

    fun decode(reader: XdrReader): LedgerCloseMetaBatchXdr {
      val startSequence = Uint32Xdr.decode(reader)
      val endSequence = Uint32Xdr.decode(reader)
      val ledgerCloseMetas = List(reader.readInt()) { LedgerCloseMetaXdr.decode(reader) }
      return LedgerCloseMetaBatchXdr(startSequence, endSequence, ledgerCloseMetas)
    }
  }

  fun encode(writer: XdrWriter) {
    startSequence.encode(writer)
    endSequence.encode(writer)
    writer.writeInt(ledgerCloseMetas.size)
    ledgerCloseMetas.forEach { item ->
      item.encode(writer)
    }
  }
}
