// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.soneso.stellar.sdk.xdr

/**
 * XDR Source:
 * struct ConfigSettingContractEventsV0
 * {
 *     // Maximum size of events that a contract call can emit.
 *     uint32 txMaxContractEventsSizeBytes;
 *     // Fee for generating 1KB of contract events.
 *     int64 feeContractEvents1KB;
 * };
 */
data class ConfigSettingContractEventsV0Xdr(
  /** Maximum size of events that a contract call can emit. */
  val txMaxContractEventsSizeBytes: Uint32Xdr,
  /** Fee for generating 1KB of contract events. */
  val feeContractEvents1Kb: Int64Xdr
) {
  companion object {

    fun decode(reader: XdrReader): ConfigSettingContractEventsV0Xdr {
      val txMaxContractEventsSizeBytes = Uint32Xdr.decode(reader)
      val feeContractEvents1Kb = Int64Xdr.decode(reader)
      return ConfigSettingContractEventsV0Xdr(txMaxContractEventsSizeBytes, feeContractEvents1Kb)
    }
  }

  fun encode(writer: XdrWriter) {
    txMaxContractEventsSizeBytes.encode(writer)
    feeContractEvents1Kb.encode(writer)
  }
}
