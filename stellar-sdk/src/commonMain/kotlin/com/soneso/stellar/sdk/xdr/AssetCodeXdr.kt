// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.soneso.stellar.sdk.xdr

/**
 * XDR Source:
 * union AssetCode switch (AssetType type)
 * {
 * case ASSET_TYPE_CREDIT_ALPHANUM4:
 *     AssetCode4 assetCode4;
 * 
 * case ASSET_TYPE_CREDIT_ALPHANUM12:
 *     AssetCode12 assetCode12;
 * 
 *     // add other asset types here in the future
 * };
 */
sealed class AssetCodeXdr {
  abstract val discriminant: AssetTypeXdr

  data class AssetCode4(
    val value: AssetCode4Xdr
  ) : AssetCodeXdr() {
    override val discriminant: AssetTypeXdr = AssetTypeXdr.ASSET_TYPE_CREDIT_ALPHANUM4
  }

  data class AssetCode12(
    val value: AssetCode12Xdr
  ) : AssetCodeXdr() {
    override val discriminant: AssetTypeXdr = AssetTypeXdr.ASSET_TYPE_CREDIT_ALPHANUM12
  }

  companion object {

    fun decode(reader: XdrReader): AssetCodeXdr {
      val discriminant = AssetTypeXdr.decode(reader)
      return when (discriminant) {
        AssetTypeXdr.ASSET_TYPE_CREDIT_ALPHANUM4 -> {
          val value = AssetCode4Xdr.decode(reader)
          AssetCode4(value)
        }
        AssetTypeXdr.ASSET_TYPE_CREDIT_ALPHANUM12 -> {
          val value = AssetCode12Xdr.decode(reader)
          AssetCode12(value)
        }
        else -> throw IllegalArgumentException("Unknown AssetCodeXdr discriminant: $discriminant")
      }
    }
  }

  fun encode(writer: XdrWriter) {
    discriminant.encode(writer)
    when (this) {
      is AssetCode4 -> {
        value.encode(writer)
      }
      is AssetCode12 -> {
        value.encode(writer)
      }
    }
  }
}
