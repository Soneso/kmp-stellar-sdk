// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.soneso.stellar.sdk.xdr

/**
 * XDR Source:
 * enum TrustLineFlags
 * {
 *     // issuer has authorized account to perform transactions with its credit
 *     AUTHORIZED_FLAG = 1,
 *     // issuer has authorized account to maintain and reduce liabilities for its
 *     // credit
 *     AUTHORIZED_TO_MAINTAIN_LIABILITIES_FLAG = 2,
 *     // issuer has specified that it may clawback its credit, and that claimable
 *     // balances created with its credit may also be clawed back
 *     TRUSTLINE_CLAWBACK_ENABLED_FLAG = 4
 * };
 */
enum class TrustLineFlagsXdr(val value: Int) {
  /** issuer has authorized account to perform transactions with its credit */
  AUTHORIZED_FLAG(1),
  /**
   * issuer has authorized account to maintain and reduce liabilities for its
   * credit
   */
  AUTHORIZED_TO_MAINTAIN_LIABILITIES_FLAG(2),
  /**
   * issuer has specified that it may clawback its credit, and that claimable
   * balances created with its credit may also be clawed back
   */
  TRUSTLINE_CLAWBACK_ENABLED_FLAG(4);

  companion object {

    fun decode(reader: XdrReader): TrustLineFlagsXdr {
      val value = reader.readInt()
      return entries.find { it.value == value }
        ?: throw IllegalArgumentException("Unknown TrustLineFlagsXdr value: $value")
    }
  }

  fun encode(writer: XdrWriter) {
    writer.writeInt(value)
  }
}
