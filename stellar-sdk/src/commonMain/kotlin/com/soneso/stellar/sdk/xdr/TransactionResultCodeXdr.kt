// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.soneso.stellar.sdk.xdr

/**
 * XDR Source:
 * enum TransactionResultCode
 * {
 *     txFEE_BUMP_INNER_SUCCESS = 1, // fee bump inner transaction succeeded
 *     txSUCCESS = 0,                // all operations succeeded
 * 
 *     txFAILED = -1, // one of the operations failed (none were applied)
 * 
 *     txTOO_EARLY = -2,         // ledger closeTime before minTime
 *     txTOO_LATE = -3,          // ledger closeTime after maxTime
 *     txMISSING_OPERATION = -4, // no operation was specified
 *     txBAD_SEQ = -5,           // sequence number does not match source account
 * 
 *     txBAD_AUTH = -6,             // too few valid signatures / wrong network
 *     txINSUFFICIENT_BALANCE = -7, // fee would bring account below reserve
 *     txNO_ACCOUNT = -8,           // source account not found
 *     txINSUFFICIENT_FEE = -9,     // fee is too small
 *     txBAD_AUTH_EXTRA = -10,      // unused signatures attached to transaction
 *     txINTERNAL_ERROR = -11,      // an unknown error occurred
 * 
 *     txNOT_SUPPORTED = -12,          // transaction type not supported
 *     txFEE_BUMP_INNER_FAILED = -13,  // fee bump inner transaction failed
 *     txBAD_SPONSORSHIP = -14,        // sponsorship not confirmed
 *     txBAD_MIN_SEQ_AGE_OR_GAP = -15, // minSeqAge or minSeqLedgerGap conditions not met
 *     txMALFORMED = -16,              // precondition is invalid
 *     txSOROBAN_INVALID = -17         // soroban-specific preconditions were not met
 * };
 */
enum class TransactionResultCodeXdr(val value: Int) {
  /** fee bump inner transaction succeeded */
  txFEE_BUMP_INNER_SUCCESS(1),
  /** all operations succeeded */
  txSUCCESS(0),
  /** one of the operations failed (none were applied) */
  txFAILED(-1),
  /** ledger closeTime before minTime */
  txTOO_EARLY(-2),
  /** ledger closeTime after maxTime */
  txTOO_LATE(-3),
  /** no operation was specified */
  txMISSING_OPERATION(-4),
  /** sequence number does not match source account */
  txBAD_SEQ(-5),
  /** too few valid signatures / wrong network */
  txBAD_AUTH(-6),
  /** fee would bring account below reserve */
  txINSUFFICIENT_BALANCE(-7),
  /** source account not found */
  txNO_ACCOUNT(-8),
  /** fee is too small */
  txINSUFFICIENT_FEE(-9),
  /** unused signatures attached to transaction */
  txBAD_AUTH_EXTRA(-10),
  /** an unknown error occurred */
  txINTERNAL_ERROR(-11),
  /** transaction type not supported */
  txNOT_SUPPORTED(-12),
  /** fee bump inner transaction failed */
  txFEE_BUMP_INNER_FAILED(-13),
  /** sponsorship not confirmed */
  txBAD_SPONSORSHIP(-14),
  /** minSeqAge or minSeqLedgerGap conditions not met */
  txBAD_MIN_SEQ_AGE_OR_GAP(-15),
  /** precondition is invalid */
  txMALFORMED(-16),
  /** soroban-specific preconditions were not met */
  txSOROBAN_INVALID(-17);

  companion object {

    fun decode(reader: XdrReader): TransactionResultCodeXdr {
      val value = reader.readInt()
      return entries.find { it.value == value }
        ?: throw IllegalArgumentException("Unknown TransactionResultCodeXdr value: $value")
    }
  }

  fun encode(writer: XdrWriter) {
    writer.writeInt(value)
  }
}
