// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.soneso.stellar.sdk.xdr

/**
 * XDR Source:
 * union LiquidityPoolDepositResult switch (LiquidityPoolDepositResultCode code)
 * {
 * case LIQUIDITY_POOL_DEPOSIT_SUCCESS:
 *     void;
 * case LIQUIDITY_POOL_DEPOSIT_MALFORMED:
 * case LIQUIDITY_POOL_DEPOSIT_NO_TRUST:
 * case LIQUIDITY_POOL_DEPOSIT_NOT_AUTHORIZED:
 * case LIQUIDITY_POOL_DEPOSIT_UNDERFUNDED:
 * case LIQUIDITY_POOL_DEPOSIT_LINE_FULL:
 * case LIQUIDITY_POOL_DEPOSIT_BAD_PRICE:
 * case LIQUIDITY_POOL_DEPOSIT_POOL_FULL:
 *     void;
 * };
 */
sealed class LiquidityPoolDepositResultXdr {
  abstract val discriminant: LiquidityPoolDepositResultCodeXdr

  data class Void(
    override val discriminant: LiquidityPoolDepositResultCodeXdr
  ) : LiquidityPoolDepositResultXdr()

  companion object {

    fun decode(reader: XdrReader): LiquidityPoolDepositResultXdr {
      val discriminant = LiquidityPoolDepositResultCodeXdr.decode(reader)
      return when (discriminant) {
        LiquidityPoolDepositResultCodeXdr.LIQUIDITY_POOL_DEPOSIT_SUCCESS -> Void(discriminant)
        LiquidityPoolDepositResultCodeXdr.LIQUIDITY_POOL_DEPOSIT_MALFORMED -> Void(discriminant)
        LiquidityPoolDepositResultCodeXdr.LIQUIDITY_POOL_DEPOSIT_NO_TRUST -> Void(discriminant)
        LiquidityPoolDepositResultCodeXdr.LIQUIDITY_POOL_DEPOSIT_NOT_AUTHORIZED -> Void(discriminant)
        LiquidityPoolDepositResultCodeXdr.LIQUIDITY_POOL_DEPOSIT_UNDERFUNDED -> Void(discriminant)
        LiquidityPoolDepositResultCodeXdr.LIQUIDITY_POOL_DEPOSIT_LINE_FULL -> Void(discriminant)
        LiquidityPoolDepositResultCodeXdr.LIQUIDITY_POOL_DEPOSIT_BAD_PRICE -> Void(discriminant)
        LiquidityPoolDepositResultCodeXdr.LIQUIDITY_POOL_DEPOSIT_POOL_FULL -> Void(discriminant)
        else -> throw IllegalArgumentException("Unknown LiquidityPoolDepositResultXdr discriminant: $discriminant")
      }
    }
  }

  fun encode(writer: XdrWriter) {
    discriminant.encode(writer)
    when (this) {
      is Void -> {}
    }
  }
}
