// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.soneso.stellar.sdk.xdr

/**
 * XDR Source:
 * struct LiquidityPoolDepositOp
 * {
 *     PoolID liquidityPoolID;
 *     int64 maxAmountA; // maximum amount of first asset to deposit
 *     int64 maxAmountB; // maximum amount of second asset to deposit
 *     Price minPrice;   // minimum depositA/depositB
 *     Price maxPrice;   // maximum depositA/depositB
 * };
 */
data class LiquidityPoolDepositOpXdr(
  val liquidityPoolId: PoolIDXdr,
  /** maximum amount of first asset to deposit */
  val maxAmountA: Int64Xdr,
  /** maximum amount of second asset to deposit */
  val maxAmountB: Int64Xdr,
  /** minimum depositA/depositB */
  val minPrice: PriceXdr,
  /** maximum depositA/depositB */
  val maxPrice: PriceXdr
) {
  companion object {

    fun decode(reader: XdrReader): LiquidityPoolDepositOpXdr {
      val liquidityPoolId = PoolIDXdr.decode(reader)
      val maxAmountA = Int64Xdr.decode(reader)
      val maxAmountB = Int64Xdr.decode(reader)
      val minPrice = PriceXdr.decode(reader)
      val maxPrice = PriceXdr.decode(reader)
      return LiquidityPoolDepositOpXdr(liquidityPoolId, maxAmountA, maxAmountB, minPrice, maxPrice)
    }
  }

  fun encode(writer: XdrWriter) {
    liquidityPoolId.encode(writer)
    maxAmountA.encode(writer)
    maxAmountB.encode(writer)
    minPrice.encode(writer)
    maxPrice.encode(writer)
  }
}
