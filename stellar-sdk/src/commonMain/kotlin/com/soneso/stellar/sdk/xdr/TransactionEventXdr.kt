// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.soneso.stellar.sdk.xdr

import kotlin.io.encoding.Base64

/**
 * XDR Source:
 * struct TransactionEvent {
 *     TransactionEventStage stage;  // Stage at which an event has occurred.
 *     ContractEvent event;  // The contract event that has occurred.
 * };
 */
data class TransactionEventXdr(
  /** Stage at which an event has occurred. */
  val stage: TransactionEventStageXdr,
  /** The contract event that has occurred. */
  val event: ContractEventXdr
) {
  companion object {

    fun decode(reader: XdrReader): TransactionEventXdr {
      val stage = TransactionEventStageXdr.decode(reader)
      val event = ContractEventXdr.decode(reader)
      return TransactionEventXdr(stage, event)
    }

    @OptIn(kotlin.io.encoding.ExperimentalEncodingApi::class)
    fun fromXdrBase64(base64: String): TransactionEventXdr {
      val bytes = Base64.decode(base64)
      val reader = XdrReader(bytes)
      return decode(reader)
    }
  }

  fun encode(writer: XdrWriter) {
    stage.encode(writer)
    event.encode(writer)
  }
}
