// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.soneso.stellar.sdk.xdr

/**
 * XDR Source:
 * struct LiquidityPoolWithdrawOp
 * {
 *     PoolID liquidityPoolID;
 *     int64 amount;     // amount of pool shares to withdraw
 *     int64 minAmountA; // minimum amount of first asset to withdraw
 *     int64 minAmountB; // minimum amount of second asset to withdraw
 * };
 */
data class LiquidityPoolWithdrawOpXdr(
  val liquidityPoolId: PoolIDXdr,
  /** amount of pool shares to withdraw */
  val amount: Int64Xdr,
  /** minimum amount of first asset to withdraw */
  val minAmountA: Int64Xdr,
  /** minimum amount of second asset to withdraw */
  val minAmountB: Int64Xdr
) {
  companion object {

    fun decode(reader: XdrReader): LiquidityPoolWithdrawOpXdr {
      val liquidityPoolId = PoolIDXdr.decode(reader)
      val amount = Int64Xdr.decode(reader)
      val minAmountA = Int64Xdr.decode(reader)
      val minAmountB = Int64Xdr.decode(reader)
      return LiquidityPoolWithdrawOpXdr(liquidityPoolId, amount, minAmountA, minAmountB)
    }
  }

  fun encode(writer: XdrWriter) {
    liquidityPoolId.encode(writer)
    amount.encode(writer)
    minAmountA.encode(writer)
    minAmountB.encode(writer)
  }
}
