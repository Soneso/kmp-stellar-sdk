// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.soneso.stellar.sdk.xdr

/**
 * XDR Source:
 * union TxSetComponent switch (TxSetComponentType type)
 * {
 * case TXSET_COMP_TXS_MAYBE_DISCOUNTED_FEE:
 *   struct
 *   {
 *     int64* baseFee;
 *     TransactionEnvelope txs<>;
 *   } txsMaybeDiscountedFee;
 * };
 */
sealed class TxSetComponentXdr {
  abstract val discriminant: TxSetComponentTypeXdr

  data class TxsMaybeDiscountedFee(
    val value: TxSetComponentTxsMaybeDiscountedFeeXdr
  ) : TxSetComponentXdr() {
    override val discriminant: TxSetComponentTypeXdr = TxSetComponentTypeXdr.TXSET_COMP_TXS_MAYBE_DISCOUNTED_FEE
  }

  companion object {

    fun decode(reader: XdrReader): TxSetComponentXdr {
      val discriminant = TxSetComponentTypeXdr.decode(reader)
      return when (discriminant) {
        TxSetComponentTypeXdr.TXSET_COMP_TXS_MAYBE_DISCOUNTED_FEE -> {
          val value = TxSetComponentTxsMaybeDiscountedFeeXdr.decode(reader)
          TxsMaybeDiscountedFee(value)
        }
        else -> throw IllegalArgumentException("Unknown TxSetComponentXdr discriminant: $discriminant")
      }
    }
  }

  fun encode(writer: XdrWriter) {
    discriminant.encode(writer)
    when (this) {
      is TxsMaybeDiscountedFee -> {
        value.encode(writer)
      }
    }
  }
}
