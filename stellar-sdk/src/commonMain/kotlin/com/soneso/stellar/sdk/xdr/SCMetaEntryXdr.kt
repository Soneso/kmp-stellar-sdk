// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.soneso.stellar.sdk.xdr

/**
 * XDR Source:
 * union SCMetaEntry switch (SCMetaKind kind)
 * {
 * case SC_META_V0:
 *     SCMetaV0 v0;
 * };
 */
sealed class SCMetaEntryXdr {
  abstract val discriminant: SCMetaKindXdr

  data class V0(
    val value: SCMetaV0Xdr
  ) : SCMetaEntryXdr() {
    override val discriminant: SCMetaKindXdr = SCMetaKindXdr.SC_META_V0
  }

  companion object {

    fun decode(reader: XdrReader): SCMetaEntryXdr {
      val discriminant = SCMetaKindXdr.decode(reader)
      return when (discriminant) {
        SCMetaKindXdr.SC_META_V0 -> {
          val value = SCMetaV0Xdr.decode(reader)
          V0(value)
        }
        else -> throw IllegalArgumentException("Unknown SCMetaEntryXdr discriminant: $discriminant")
      }
    }
  }

  fun encode(writer: XdrWriter) {
    discriminant.encode(writer)
    when (this) {
      is V0 -> {
        value.encode(writer)
      }
    }
  }
}
