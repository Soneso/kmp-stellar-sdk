// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.soneso.stellar.sdk.xdr

/**
 * XDR Source:
 * struct PeerAddress
 * {
 *     union switch (IPAddrType type)
 *     {
 *     case IPv4:
 *         opaque ipv4[4];
 *     case IPv6:
 *         opaque ipv6[16];
 *     }
 *     ip;
 *     uint32 port;
 *     uint32 numFailures;
 * };
 */
data class PeerAddressXdr(
  val ip: PeerAddressIpXdr,
  val port: Uint32Xdr,
  val numFailures: Uint32Xdr
) {
  companion object {

    fun decode(reader: XdrReader): PeerAddressXdr {
      val ip = PeerAddressIpXdr.decode(reader)
      val port = Uint32Xdr.decode(reader)
      val numFailures = Uint32Xdr.decode(reader)
      return PeerAddressXdr(ip, port, numFailures)
    }
  }

  fun encode(writer: XdrWriter) {
    ip.encode(writer)
    port.encode(writer)
    numFailures.encode(writer)
  }
}
