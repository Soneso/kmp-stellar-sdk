// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.soneso.stellar.sdk.xdr

/**
 * XDR Source:
 * union switch (OperationType type)
 *     {
 *     case CREATE_ACCOUNT:
 *         CreateAccountOp createAccountOp;
 *     case PAYMENT:
 *         PaymentOp paymentOp;
 *     case PATH_PAYMENT_STRICT_RECEIVE:
 *         PathPaymentStrictReceiveOp pathPaymentStrictReceiveOp;
 *     case MANAGE_SELL_OFFER:
 *         ManageSellOfferOp manageSellOfferOp;
 *     case CREATE_PASSIVE_SELL_OFFER:
 *         CreatePassiveSellOfferOp createPassiveSellOfferOp;
 *     case SET_OPTIONS:
 *         SetOptionsOp setOptionsOp;
 *     case CHANGE_TRUST:
 *         ChangeTrustOp changeTrustOp;
 *     case ALLOW_TRUST:
 *         AllowTrustOp allowTrustOp;
 *     case ACCOUNT_MERGE:
 *         MuxedAccount destination;
 *     case INFLATION:
 *         void;
 *     case MANAGE_DATA:
 *         ManageDataOp manageDataOp;
 *     case BUMP_SEQUENCE:
 *         BumpSequenceOp bumpSequenceOp;
 *     case MANAGE_BUY_OFFER:
 *         ManageBuyOfferOp manageBuyOfferOp;
 *     case PATH_PAYMENT_STRICT_SEND:
 *         PathPaymentStrictSendOp pathPaymentStrictSendOp;
 *     case CREATE_CLAIMABLE_BALANCE:
 *         CreateClaimableBalanceOp createClaimableBalanceOp;
 *     case CLAIM_CLAIMABLE_BALANCE:
 *         ClaimClaimableBalanceOp claimClaimableBalanceOp;
 *     case BEGIN_SPONSORING_FUTURE_RESERVES:
 *         BeginSponsoringFutureReservesOp beginSponsoringFutureReservesOp;
 *     case END_SPONSORING_FUTURE_RESERVES:
 *         void;
 *     case REVOKE_SPONSORSHIP:
 *         RevokeSponsorshipOp revokeSponsorshipOp;
 *     case CLAWBACK:
 *         ClawbackOp clawbackOp;
 *     case CLAWBACK_CLAIMABLE_BALANCE:
 *         ClawbackClaimableBalanceOp clawbackClaimableBalanceOp;
 *     case SET_TRUST_LINE_FLAGS:
 *         SetTrustLineFlagsOp setTrustLineFlagsOp;
 *     case LIQUIDITY_POOL_DEPOSIT:
 *         LiquidityPoolDepositOp liquidityPoolDepositOp;
 *     case LIQUIDITY_POOL_WITHDRAW:
 *         LiquidityPoolWithdrawOp liquidityPoolWithdrawOp;
 *     case INVOKE_HOST_FUNCTION:
 *         InvokeHostFunctionOp invokeHostFunctionOp;
 *     case EXTEND_FOOTPRINT_TTL:
 *         ExtendFootprintTTLOp extendFootprintTTLOp;
 *     case RESTORE_FOOTPRINT:
 *         RestoreFootprintOp restoreFootprintOp;
 *     }
 */
sealed class OperationBodyXdr {
  abstract val discriminant: OperationTypeXdr

  data class CreateAccountOp(
    val value: CreateAccountOpXdr
  ) : OperationBodyXdr() {
    override val discriminant: OperationTypeXdr = OperationTypeXdr.CREATE_ACCOUNT
  }

  data class PaymentOp(
    val value: PaymentOpXdr
  ) : OperationBodyXdr() {
    override val discriminant: OperationTypeXdr = OperationTypeXdr.PAYMENT
  }

  data class PathPaymentStrictReceiveOp(
    val value: PathPaymentStrictReceiveOpXdr
  ) : OperationBodyXdr() {
    override val discriminant: OperationTypeXdr = OperationTypeXdr.PATH_PAYMENT_STRICT_RECEIVE
  }

  data class ManageSellOfferOp(
    val value: ManageSellOfferOpXdr
  ) : OperationBodyXdr() {
    override val discriminant: OperationTypeXdr = OperationTypeXdr.MANAGE_SELL_OFFER
  }

  data class CreatePassiveSellOfferOp(
    val value: CreatePassiveSellOfferOpXdr
  ) : OperationBodyXdr() {
    override val discriminant: OperationTypeXdr = OperationTypeXdr.CREATE_PASSIVE_SELL_OFFER
  }

  data class SetOptionsOp(
    val value: SetOptionsOpXdr
  ) : OperationBodyXdr() {
    override val discriminant: OperationTypeXdr = OperationTypeXdr.SET_OPTIONS
  }

  data class ChangeTrustOp(
    val value: ChangeTrustOpXdr
  ) : OperationBodyXdr() {
    override val discriminant: OperationTypeXdr = OperationTypeXdr.CHANGE_TRUST
  }

  data class AllowTrustOp(
    val value: AllowTrustOpXdr
  ) : OperationBodyXdr() {
    override val discriminant: OperationTypeXdr = OperationTypeXdr.ALLOW_TRUST
  }

  data class Destination(
    val value: MuxedAccountXdr
  ) : OperationBodyXdr() {
    override val discriminant: OperationTypeXdr = OperationTypeXdr.ACCOUNT_MERGE
  }

  data class ManageDataOp(
    val value: ManageDataOpXdr
  ) : OperationBodyXdr() {
    override val discriminant: OperationTypeXdr = OperationTypeXdr.MANAGE_DATA
  }

  data class BumpSequenceOp(
    val value: BumpSequenceOpXdr
  ) : OperationBodyXdr() {
    override val discriminant: OperationTypeXdr = OperationTypeXdr.BUMP_SEQUENCE
  }

  data class ManageBuyOfferOp(
    val value: ManageBuyOfferOpXdr
  ) : OperationBodyXdr() {
    override val discriminant: OperationTypeXdr = OperationTypeXdr.MANAGE_BUY_OFFER
  }

  data class PathPaymentStrictSendOp(
    val value: PathPaymentStrictSendOpXdr
  ) : OperationBodyXdr() {
    override val discriminant: OperationTypeXdr = OperationTypeXdr.PATH_PAYMENT_STRICT_SEND
  }

  data class CreateClaimableBalanceOp(
    val value: CreateClaimableBalanceOpXdr
  ) : OperationBodyXdr() {
    override val discriminant: OperationTypeXdr = OperationTypeXdr.CREATE_CLAIMABLE_BALANCE
  }

  data class ClaimClaimableBalanceOp(
    val value: ClaimClaimableBalanceOpXdr
  ) : OperationBodyXdr() {
    override val discriminant: OperationTypeXdr = OperationTypeXdr.CLAIM_CLAIMABLE_BALANCE
  }

  data class BeginSponsoringFutureReservesOp(
    val value: BeginSponsoringFutureReservesOpXdr
  ) : OperationBodyXdr() {
    override val discriminant: OperationTypeXdr = OperationTypeXdr.BEGIN_SPONSORING_FUTURE_RESERVES
  }

  data class RevokeSponsorshipOp(
    val value: RevokeSponsorshipOpXdr
  ) : OperationBodyXdr() {
    override val discriminant: OperationTypeXdr = OperationTypeXdr.REVOKE_SPONSORSHIP
  }

  data class ClawbackOp(
    val value: ClawbackOpXdr
  ) : OperationBodyXdr() {
    override val discriminant: OperationTypeXdr = OperationTypeXdr.CLAWBACK
  }

  data class ClawbackClaimableBalanceOp(
    val value: ClawbackClaimableBalanceOpXdr
  ) : OperationBodyXdr() {
    override val discriminant: OperationTypeXdr = OperationTypeXdr.CLAWBACK_CLAIMABLE_BALANCE
  }

  data class SetTrustLineFlagsOp(
    val value: SetTrustLineFlagsOpXdr
  ) : OperationBodyXdr() {
    override val discriminant: OperationTypeXdr = OperationTypeXdr.SET_TRUST_LINE_FLAGS
  }

  data class LiquidityPoolDepositOp(
    val value: LiquidityPoolDepositOpXdr
  ) : OperationBodyXdr() {
    override val discriminant: OperationTypeXdr = OperationTypeXdr.LIQUIDITY_POOL_DEPOSIT
  }

  data class LiquidityPoolWithdrawOp(
    val value: LiquidityPoolWithdrawOpXdr
  ) : OperationBodyXdr() {
    override val discriminant: OperationTypeXdr = OperationTypeXdr.LIQUIDITY_POOL_WITHDRAW
  }

  data class InvokeHostFunctionOp(
    val value: InvokeHostFunctionOpXdr
  ) : OperationBodyXdr() {
    override val discriminant: OperationTypeXdr = OperationTypeXdr.INVOKE_HOST_FUNCTION
  }

  data class ExtendFootprintTTLOp(
    val value: ExtendFootprintTTLOpXdr
  ) : OperationBodyXdr() {
    override val discriminant: OperationTypeXdr = OperationTypeXdr.EXTEND_FOOTPRINT_TTL
  }

  data class RestoreFootprintOp(
    val value: RestoreFootprintOpXdr
  ) : OperationBodyXdr() {
    override val discriminant: OperationTypeXdr = OperationTypeXdr.RESTORE_FOOTPRINT
  }

  data class Void(
    override val discriminant: OperationTypeXdr
  ) : OperationBodyXdr()

  companion object {

    fun decode(reader: XdrReader): OperationBodyXdr {
      val discriminant = OperationTypeXdr.decode(reader)
      return when (discriminant) {
        OperationTypeXdr.CREATE_ACCOUNT -> {
          val value = CreateAccountOpXdr.decode(reader)
          CreateAccountOp(value)
        }
        OperationTypeXdr.PAYMENT -> {
          val value = PaymentOpXdr.decode(reader)
          PaymentOp(value)
        }
        OperationTypeXdr.PATH_PAYMENT_STRICT_RECEIVE -> {
          val value = PathPaymentStrictReceiveOpXdr.decode(reader)
          PathPaymentStrictReceiveOp(value)
        }
        OperationTypeXdr.MANAGE_SELL_OFFER -> {
          val value = ManageSellOfferOpXdr.decode(reader)
          ManageSellOfferOp(value)
        }
        OperationTypeXdr.CREATE_PASSIVE_SELL_OFFER -> {
          val value = CreatePassiveSellOfferOpXdr.decode(reader)
          CreatePassiveSellOfferOp(value)
        }
        OperationTypeXdr.SET_OPTIONS -> {
          val value = SetOptionsOpXdr.decode(reader)
          SetOptionsOp(value)
        }
        OperationTypeXdr.CHANGE_TRUST -> {
          val value = ChangeTrustOpXdr.decode(reader)
          ChangeTrustOp(value)
        }
        OperationTypeXdr.ALLOW_TRUST -> {
          val value = AllowTrustOpXdr.decode(reader)
          AllowTrustOp(value)
        }
        OperationTypeXdr.ACCOUNT_MERGE -> {
          val value = MuxedAccountXdr.decode(reader)
          Destination(value)
        }
        OperationTypeXdr.INFLATION -> Void(discriminant)
        OperationTypeXdr.MANAGE_DATA -> {
          val value = ManageDataOpXdr.decode(reader)
          ManageDataOp(value)
        }
        OperationTypeXdr.BUMP_SEQUENCE -> {
          val value = BumpSequenceOpXdr.decode(reader)
          BumpSequenceOp(value)
        }
        OperationTypeXdr.MANAGE_BUY_OFFER -> {
          val value = ManageBuyOfferOpXdr.decode(reader)
          ManageBuyOfferOp(value)
        }
        OperationTypeXdr.PATH_PAYMENT_STRICT_SEND -> {
          val value = PathPaymentStrictSendOpXdr.decode(reader)
          PathPaymentStrictSendOp(value)
        }
        OperationTypeXdr.CREATE_CLAIMABLE_BALANCE -> {
          val value = CreateClaimableBalanceOpXdr.decode(reader)
          CreateClaimableBalanceOp(value)
        }
        OperationTypeXdr.CLAIM_CLAIMABLE_BALANCE -> {
          val value = ClaimClaimableBalanceOpXdr.decode(reader)
          ClaimClaimableBalanceOp(value)
        }
        OperationTypeXdr.BEGIN_SPONSORING_FUTURE_RESERVES -> {
          val value = BeginSponsoringFutureReservesOpXdr.decode(reader)
          BeginSponsoringFutureReservesOp(value)
        }
        OperationTypeXdr.END_SPONSORING_FUTURE_RESERVES -> Void(discriminant)
        OperationTypeXdr.REVOKE_SPONSORSHIP -> {
          val value = RevokeSponsorshipOpXdr.decode(reader)
          RevokeSponsorshipOp(value)
        }
        OperationTypeXdr.CLAWBACK -> {
          val value = ClawbackOpXdr.decode(reader)
          ClawbackOp(value)
        }
        OperationTypeXdr.CLAWBACK_CLAIMABLE_BALANCE -> {
          val value = ClawbackClaimableBalanceOpXdr.decode(reader)
          ClawbackClaimableBalanceOp(value)
        }
        OperationTypeXdr.SET_TRUST_LINE_FLAGS -> {
          val value = SetTrustLineFlagsOpXdr.decode(reader)
          SetTrustLineFlagsOp(value)
        }
        OperationTypeXdr.LIQUIDITY_POOL_DEPOSIT -> {
          val value = LiquidityPoolDepositOpXdr.decode(reader)
          LiquidityPoolDepositOp(value)
        }
        OperationTypeXdr.LIQUIDITY_POOL_WITHDRAW -> {
          val value = LiquidityPoolWithdrawOpXdr.decode(reader)
          LiquidityPoolWithdrawOp(value)
        }
        OperationTypeXdr.INVOKE_HOST_FUNCTION -> {
          val value = InvokeHostFunctionOpXdr.decode(reader)
          InvokeHostFunctionOp(value)
        }
        OperationTypeXdr.EXTEND_FOOTPRINT_TTL -> {
          val value = ExtendFootprintTTLOpXdr.decode(reader)
          ExtendFootprintTTLOp(value)
        }
        OperationTypeXdr.RESTORE_FOOTPRINT -> {
          val value = RestoreFootprintOpXdr.decode(reader)
          RestoreFootprintOp(value)
        }
        else -> throw IllegalArgumentException("Unknown OperationBodyXdr discriminant: $discriminant")
      }
    }
  }

  fun encode(writer: XdrWriter) {
    discriminant.encode(writer)
    when (this) {
      is CreateAccountOp -> {
        value.encode(writer)
      }
      is PaymentOp -> {
        value.encode(writer)
      }
      is PathPaymentStrictReceiveOp -> {
        value.encode(writer)
      }
      is ManageSellOfferOp -> {
        value.encode(writer)
      }
      is CreatePassiveSellOfferOp -> {
        value.encode(writer)
      }
      is SetOptionsOp -> {
        value.encode(writer)
      }
      is ChangeTrustOp -> {
        value.encode(writer)
      }
      is AllowTrustOp -> {
        value.encode(writer)
      }
      is Destination -> {
        value.encode(writer)
      }
      is Void -> {}
      is ManageDataOp -> {
        value.encode(writer)
      }
      is BumpSequenceOp -> {
        value.encode(writer)
      }
      is ManageBuyOfferOp -> {
        value.encode(writer)
      }
      is PathPaymentStrictSendOp -> {
        value.encode(writer)
      }
      is CreateClaimableBalanceOp -> {
        value.encode(writer)
      }
      is ClaimClaimableBalanceOp -> {
        value.encode(writer)
      }
      is BeginSponsoringFutureReservesOp -> {
        value.encode(writer)
      }
      is RevokeSponsorshipOp -> {
        value.encode(writer)
      }
      is ClawbackOp -> {
        value.encode(writer)
      }
      is ClawbackClaimableBalanceOp -> {
        value.encode(writer)
      }
      is SetTrustLineFlagsOp -> {
        value.encode(writer)
      }
      is LiquidityPoolDepositOp -> {
        value.encode(writer)
      }
      is LiquidityPoolWithdrawOp -> {
        value.encode(writer)
      }
      is InvokeHostFunctionOp -> {
        value.encode(writer)
      }
      is ExtendFootprintTTLOp -> {
        value.encode(writer)
      }
      is RestoreFootprintOp -> {
        value.encode(writer)
      }
    }
  }
}
