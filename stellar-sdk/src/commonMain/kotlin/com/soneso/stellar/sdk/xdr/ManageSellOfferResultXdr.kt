// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.soneso.stellar.sdk.xdr

/**
 * XDR Source:
 * union ManageSellOfferResult switch (ManageSellOfferResultCode code)
 * {
 * case MANAGE_SELL_OFFER_SUCCESS:
 *     ManageOfferSuccessResult success;
 * case MANAGE_SELL_OFFER_MALFORMED:
 * case MANAGE_SELL_OFFER_SELL_NO_TRUST:
 * case MANAGE_SELL_OFFER_BUY_NO_TRUST:
 * case MANAGE_SELL_OFFER_SELL_NOT_AUTHORIZED:
 * case MANAGE_SELL_OFFER_BUY_NOT_AUTHORIZED:
 * case MANAGE_SELL_OFFER_LINE_FULL:
 * case MANAGE_SELL_OFFER_UNDERFUNDED:
 * case MANAGE_SELL_OFFER_CROSS_SELF:
 * case MANAGE_SELL_OFFER_SELL_NO_ISSUER:
 * case MANAGE_SELL_OFFER_BUY_NO_ISSUER:
 * case MANAGE_SELL_OFFER_NOT_FOUND:
 * case MANAGE_SELL_OFFER_LOW_RESERVE:
 *     void;
 * };
 */
sealed class ManageSellOfferResultXdr {
  abstract val discriminant: ManageSellOfferResultCodeXdr

  data class Success(
    val value: ManageOfferSuccessResultXdr
  ) : ManageSellOfferResultXdr() {
    override val discriminant: ManageSellOfferResultCodeXdr = ManageSellOfferResultCodeXdr.MANAGE_SELL_OFFER_SUCCESS
  }

  data object Void : ManageSellOfferResultXdr() {
    override val discriminant: ManageSellOfferResultCodeXdr = ManageSellOfferResultCodeXdr.MANAGE_SELL_OFFER_MALFORMED
  }

  companion object {

    fun decode(reader: XdrReader): ManageSellOfferResultXdr {
      val discriminant = ManageSellOfferResultCodeXdr.decode(reader)
      return when (discriminant) {
        ManageSellOfferResultCodeXdr.MANAGE_SELL_OFFER_SUCCESS -> {
          val value = ManageOfferSuccessResultXdr.decode(reader)
          Success(value)
        }
        ManageSellOfferResultCodeXdr.MANAGE_SELL_OFFER_MALFORMED -> Void
        ManageSellOfferResultCodeXdr.MANAGE_SELL_OFFER_SELL_NO_TRUST -> Void
        ManageSellOfferResultCodeXdr.MANAGE_SELL_OFFER_BUY_NO_TRUST -> Void
        ManageSellOfferResultCodeXdr.MANAGE_SELL_OFFER_SELL_NOT_AUTHORIZED -> Void
        ManageSellOfferResultCodeXdr.MANAGE_SELL_OFFER_BUY_NOT_AUTHORIZED -> Void
        ManageSellOfferResultCodeXdr.MANAGE_SELL_OFFER_LINE_FULL -> Void
        ManageSellOfferResultCodeXdr.MANAGE_SELL_OFFER_UNDERFUNDED -> Void
        ManageSellOfferResultCodeXdr.MANAGE_SELL_OFFER_CROSS_SELF -> Void
        ManageSellOfferResultCodeXdr.MANAGE_SELL_OFFER_SELL_NO_ISSUER -> Void
        ManageSellOfferResultCodeXdr.MANAGE_SELL_OFFER_BUY_NO_ISSUER -> Void
        ManageSellOfferResultCodeXdr.MANAGE_SELL_OFFER_NOT_FOUND -> Void
        ManageSellOfferResultCodeXdr.MANAGE_SELL_OFFER_LOW_RESERVE -> Void
        else -> throw IllegalArgumentException("Unknown ManageSellOfferResultXdr discriminant: $discriminant")
      }
    }
  }

  fun encode(writer: XdrWriter) {
    discriminant.encode(writer)
    when (this) {
      is Success -> {
        value.encode(writer)
      }
      is Void -> {}
    }
  }
}
