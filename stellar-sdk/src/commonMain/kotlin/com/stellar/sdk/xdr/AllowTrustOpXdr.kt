// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.stellar.sdk.xdr

/**
 * XDR Source:
 * struct AllowTrustOp
 * {
 *     AccountID trustor;
 *     AssetCode asset;
 * 
 *     // One of 0, AUTHORIZED_FLAG, or AUTHORIZED_TO_MAINTAIN_LIABILITIES_FLAG
 *     uint32 authorize;
 * };
 */
data class AllowTrustOpXdr(
  val trustor: AccountIDXdr,
  val asset: AssetCodeXdr,
  /** One of 0, AUTHORIZED_FLAG, or AUTHORIZED_TO_MAINTAIN_LIABILITIES_FLAG */
  val authorize: Uint32Xdr
) {
  companion object {

    fun decode(reader: XdrReader): AllowTrustOpXdr {
      val trustor = AccountIDXdr.decode(reader)
      val asset = AssetCodeXdr.decode(reader)
      val authorize = Uint32Xdr.decode(reader)
      return AllowTrustOpXdr(trustor, asset, authorize)
    }
  }

  fun encode(writer: XdrWriter) {
    trustor.encode(writer)
    asset.encode(writer)
    authorize.encode(writer)
  }
}
