// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.stellar.sdk.xdr

/**
 * XDR Source:
 * struct AccountEntryExtensionV2
 * {
 *     uint32 numSponsored;
 *     uint32 numSponsoring;
 *     SponsorshipDescriptor signerSponsoringIDs<MAX_SIGNERS>;
 * 
 *     union switch (int v)
 *     {
 *     case 0:
 *         void;
 *     case 3:
 *         AccountEntryExtensionV3 v3;
 *     }
 *     ext;
 * };
 */
data class AccountEntryExtensionV2Xdr(
  val numSponsored: Uint32Xdr,
  val numSponsoring: Uint32Xdr,
  val signerSponsoringIDs: List<SponsorshipDescriptorXdr>,
  val ext: AccountEntryExtensionV2ExtXdr
) {
  companion object {

    fun decode(reader: XdrReader): AccountEntryExtensionV2Xdr {
      val numSponsored = Uint32Xdr.decode(reader)
      val numSponsoring = Uint32Xdr.decode(reader)
      val signerSponsoringIDs = List(reader.readInt()) { SponsorshipDescriptorXdr.decode(reader) }
      val ext = AccountEntryExtensionV2ExtXdr.decode(reader)
      return AccountEntryExtensionV2Xdr(numSponsored, numSponsoring, signerSponsoringIDs, ext)
    }
  }

  fun encode(writer: XdrWriter) {
    numSponsored.encode(writer)
    numSponsoring.encode(writer)
    writer.writeInt(signerSponsoringIDs.size)
    signerSponsoringIDs.forEach { item ->
      item.encode(writer)
    }
    ext.encode(writer)
  }
}
