// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.stellar.sdk.xdr

/**
 * XDR Source:
 * union GeneralizedTransactionSet switch (int v)
 * {
 * // We consider the legacy TransactionSet to be v0.
 * case 1:
 *     TransactionSetV1 v1TxSet;
 * };
 */
sealed class GeneralizedTransactionSetXdr {
  abstract val discriminant: Int

  /** We consider the legacy TransactionSet to be v0. */
  data class V1TxSet(
    val value: TransactionSetV1Xdr
  ) : GeneralizedTransactionSetXdr() {
    override val discriminant: Int = 1
  }

  companion object {

    fun decode(reader: XdrReader): GeneralizedTransactionSetXdr {
      val discriminant = reader.readInt()
      return when (discriminant) {
        1 -> {
          val value = TransactionSetV1Xdr.decode(reader)
          V1TxSet(value)
        }
        else -> throw IllegalArgumentException("Unknown GeneralizedTransactionSetXdr discriminant: $discriminant")
      }
    }
  }

  fun encode(writer: XdrWriter) {
    writer.writeInt(discriminant)
    when (this) {
      is V1TxSet -> {
        value.encode(writer)
      }
    }
  }
}
