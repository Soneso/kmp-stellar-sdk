// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.stellar.sdk.xdr

/**
 * XDR Source:
 * struct CreateClaimableBalanceOp
 * {
 *     Asset asset;
 *     int64 amount;
 *     Claimant claimants<10>;
 * };
 */
data class CreateClaimableBalanceOpXdr(
  val asset: AssetXdr,
  val amount: Int64Xdr,
  val claimants: List<ClaimantXdr>
) {
  companion object {

    fun decode(reader: XdrReader): CreateClaimableBalanceOpXdr {
      val asset = AssetXdr.decode(reader)
      val amount = Int64Xdr.decode(reader)
      val claimants = List(reader.readInt()) { ClaimantXdr.decode(reader) }
      return CreateClaimableBalanceOpXdr(asset, amount, claimants)
    }
  }

  fun encode(writer: XdrWriter) {
    asset.encode(writer)
    amount.encode(writer)
    writer.writeInt(claimants.size)
    claimants.forEach { item ->
      item.encode(writer)
    }
  }
}
