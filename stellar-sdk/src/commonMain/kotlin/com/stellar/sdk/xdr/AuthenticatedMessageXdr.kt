// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.stellar.sdk.xdr

/**
 * XDR Source:
 * union AuthenticatedMessage switch (uint32 v)
 * {
 * case 0:
 *     struct
 *     {
 *         uint64 sequence;
 *         StellarMessage message;
 *         HmacSha256Mac mac;
 *     } v0;
 * };
 */
sealed class AuthenticatedMessageXdr {
  abstract val discriminant: Uint32Xdr

  data class V0(
    val value: AuthenticatedMessageV0Xdr
  ) : AuthenticatedMessageXdr() {
    override val discriminant: Uint32Xdr = Uint32Xdr(0u)
  }

  companion object {

    fun decode(reader: XdrReader): AuthenticatedMessageXdr {
      val discriminant = Uint32Xdr.decode(reader)
      return when (discriminant) {
        Uint32Xdr(0u) -> {
          val value = AuthenticatedMessageV0Xdr.decode(reader)
          V0(value)
        }
        else -> throw IllegalArgumentException("Unknown AuthenticatedMessageXdr discriminant: $discriminant")
      }
    }
  }

  fun encode(writer: XdrWriter) {
    discriminant.encode(writer)
    when (this) {
      is V0 -> {
        value.encode(writer)
      }
    }
  }
}
