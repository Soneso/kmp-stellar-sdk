// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.stellar.sdk.xdr

/**
 * XDR Source:
 * struct LedgerEntry
 * {
 *     uint32 lastModifiedLedgerSeq; // ledger the LedgerEntry was last changed
 * 
 *     union switch (LedgerEntryType type)
 *     {
 *     case ACCOUNT:
 *         AccountEntry account;
 *     case TRUSTLINE:
 *         TrustLineEntry trustLine;
 *     case OFFER:
 *         OfferEntry offer;
 *     case DATA:
 *         DataEntry data;
 *     case CLAIMABLE_BALANCE:
 *         ClaimableBalanceEntry claimableBalance;
 *     case LIQUIDITY_POOL:
 *         LiquidityPoolEntry liquidityPool;
 *     case CONTRACT_DATA:
 *         ContractDataEntry contractData;
 *     case CONTRACT_CODE:
 *         ContractCodeEntry contractCode;
 *     case CONFIG_SETTING:
 *         ConfigSettingEntry configSetting;
 *     case TTL:
 *         TTLEntry ttl;
 *     }
 *     data;
 * 
 *     // reserved for future use
 *     union switch (int v)
 *     {
 *     case 0:
 *         void;
 *     case 1:
 *         LedgerEntryExtensionV1 v1;
 *     }
 *     ext;
 * };
 */
data class LedgerEntryXdr(
  /** ledger the LedgerEntry was last changed */
  val lastModifiedLedgerSeq: Uint32Xdr,
  val data: LedgerEntryDataXdr,
  val ext: LedgerEntryExtXdr
) {
  companion object {

    fun decode(reader: XdrReader): LedgerEntryXdr {
      val lastModifiedLedgerSeq = Uint32Xdr.decode(reader)
      val data = LedgerEntryDataXdr.decode(reader)
      val ext = LedgerEntryExtXdr.decode(reader)
      return LedgerEntryXdr(lastModifiedLedgerSeq, data, ext)
    }
  }

  fun encode(writer: XdrWriter) {
    lastModifiedLedgerSeq.encode(writer)
    data.encode(writer)
    ext.encode(writer)
  }
}
