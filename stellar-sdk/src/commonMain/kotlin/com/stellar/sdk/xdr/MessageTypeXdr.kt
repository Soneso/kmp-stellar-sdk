// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.stellar.sdk.xdr

/**
 * XDR Source:
 * enum MessageType
 * {
 *     ERROR_MSG = 0,
 *     AUTH = 2,
 *     DONT_HAVE = 3,
 *     // GET_PEERS (4) is deprecated
 * 
 *     PEERS = 5,
 * 
 *     GET_TX_SET = 6, // gets a particular txset by hash
 *     TX_SET = 7,
 *     GENERALIZED_TX_SET = 17,
 * 
 *     TRANSACTION = 8, // pass on a tx you have heard about
 * 
 *     // SCP
 *     GET_SCP_QUORUMSET = 9,
 *     SCP_QUORUMSET = 10,
 *     SCP_MESSAGE = 11,
 *     GET_SCP_STATE = 12,
 * 
 *     // new messages
 *     HELLO = 13,
 * 
 *     // SURVEY_REQUEST (14) removed and replaced by TIME_SLICED_SURVEY_REQUEST
 *     // SURVEY_RESPONSE (15) removed and replaced by TIME_SLICED_SURVEY_RESPONSE
 * 
 *     SEND_MORE = 16,
 *     SEND_MORE_EXTENDED = 20,
 * 
 *     FLOOD_ADVERT = 18,
 *     FLOOD_DEMAND = 19,
 * 
 *     TIME_SLICED_SURVEY_REQUEST = 21,
 *     TIME_SLICED_SURVEY_RESPONSE = 22,
 *     TIME_SLICED_SURVEY_START_COLLECTING = 23,
 *     TIME_SLICED_SURVEY_STOP_COLLECTING = 24
 * };
 */
enum class MessageTypeXdr(val value: Int) {
  ERROR_MSG(0),
  AUTH(2),
  DONT_HAVE(3),
  /** GET_PEERS (4) is deprecated */
  PEERS(5),
  /** gets a particular txset by hash */
  GET_TX_SET(6),
  TX_SET(7),
  GENERALIZED_TX_SET(17),
  /** pass on a tx you have heard about */
  TRANSACTION(8),
  /** SCP */
  GET_SCP_QUORUMSET(9),
  SCP_QUORUMSET(10),
  SCP_MESSAGE(11),
  GET_SCP_STATE(12),
  /** new messages */
  HELLO(13),
  /**
   * SURVEY_REQUEST (14) removed and replaced by TIME_SLICED_SURVEY_REQUEST
   * SURVEY_RESPONSE (15) removed and replaced by TIME_SLICED_SURVEY_RESPONSE
   */
  SEND_MORE(16),
  SEND_MORE_EXTENDED(20),
  FLOOD_ADVERT(18),
  FLOOD_DEMAND(19),
  TIME_SLICED_SURVEY_REQUEST(21),
  TIME_SLICED_SURVEY_RESPONSE(22),
  TIME_SLICED_SURVEY_START_COLLECTING(23),
  TIME_SLICED_SURVEY_STOP_COLLECTING(24);

  companion object {

    fun decode(reader: XdrReader): MessageTypeXdr {
      val value = reader.readInt()
      return entries.find { it.value == value }
        ?: throw IllegalArgumentException("Unknown MessageTypeXdr value: $value")
    }
  }

  fun encode(writer: XdrWriter) {
    writer.writeInt(value)
  }
}
