// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.stellar.sdk.xdr

/**
 * XDR Source:
 * enum LiquidityPoolDepositResultCode
 * {
 *     // codes considered as "success" for the operation
 *     LIQUIDITY_POOL_DEPOSIT_SUCCESS = 0,
 * 
 *     // codes considered as "failure" for the operation
 *     LIQUIDITY_POOL_DEPOSIT_MALFORMED = -1,      // bad input
 *     LIQUIDITY_POOL_DEPOSIT_NO_TRUST = -2,       // no trust line for one of the
 *                                                 // assets
 *     LIQUIDITY_POOL_DEPOSIT_NOT_AUTHORIZED = -3, // not authorized for one of the
 *                                                 // assets
 *     LIQUIDITY_POOL_DEPOSIT_UNDERFUNDED = -4,    // not enough balance for one of
 *                                                 // the assets
 *     LIQUIDITY_POOL_DEPOSIT_LINE_FULL = -5,      // pool share trust line doesn't
 *                                                 // have sufficient limit
 *     LIQUIDITY_POOL_DEPOSIT_BAD_PRICE = -6,      // deposit price outside bounds
 *     LIQUIDITY_POOL_DEPOSIT_POOL_FULL = -7       // pool reserves are full
 * };
 */
enum class LiquidityPoolDepositResultCodeXdr(val value: Int) {
  /** codes considered as "success" for the operation */
  LIQUIDITY_POOL_DEPOSIT_SUCCESS(0),
  /**
   * codes considered as "failure" for the operation
   * bad input
   */
  LIQUIDITY_POOL_DEPOSIT_MALFORMED(-1),
  /** no trust line for one of the */
  LIQUIDITY_POOL_DEPOSIT_NO_TRUST(-2),
  /**
   * assets
   * not authorized for one of the
   */
  LIQUIDITY_POOL_DEPOSIT_NOT_AUTHORIZED(-3),
  /**
   * assets
   * not enough balance for one of
   */
  LIQUIDITY_POOL_DEPOSIT_UNDERFUNDED(-4),
  /**
   * the assets
   * pool share trust line doesn't
   */
  LIQUIDITY_POOL_DEPOSIT_LINE_FULL(-5),
  /**
   * have sufficient limit
   * deposit price outside bounds
   */
  LIQUIDITY_POOL_DEPOSIT_BAD_PRICE(-6),
  /** pool reserves are full */
  LIQUIDITY_POOL_DEPOSIT_POOL_FULL(-7);

  companion object {

    fun decode(reader: XdrReader): LiquidityPoolDepositResultCodeXdr {
      val value = reader.readInt()
      return entries.find { it.value == value }
        ?: throw IllegalArgumentException("Unknown LiquidityPoolDepositResultCodeXdr value: $value")
    }
  }

  fun encode(writer: XdrWriter) {
    writer.writeInt(value)
  }
}
