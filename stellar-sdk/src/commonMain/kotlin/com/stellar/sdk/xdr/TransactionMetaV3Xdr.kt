// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.stellar.sdk.xdr

/**
 * XDR Source:
 * struct TransactionMetaV3
 * {
 *     ExtensionPoint ext;
 * 
 *     LedgerEntryChanges txChangesBefore;  // tx level changes before operations
 *                                          // are applied if any
 *     OperationMeta operations<>;          // meta for each operation
 *     LedgerEntryChanges txChangesAfter;   // tx level changes after operations are
 *                                          // applied if any
 *     SorobanTransactionMeta* sorobanMeta; // Soroban-specific meta (only for
 *                                          // Soroban transactions).
 * };
 */
data class TransactionMetaV3Xdr(
  val ext: ExtensionPointXdr,
  /** tx level changes before operations */
  val txChangesBefore: LedgerEntryChangesXdr,
  val operations: List<OperationMetaXdr>,
  /** tx level changes after operations are */
  val txChangesAfter: LedgerEntryChangesXdr,
  /**
   * applied if any
   * Soroban-specific meta (only for
   */
  val sorobanMeta: SorobanTransactionMetaXdr?
) {
  companion object {

    fun decode(reader: XdrReader): TransactionMetaV3Xdr {
      val ext = ExtensionPointXdr.decode(reader)
      val txChangesBefore = LedgerEntryChangesXdr.decode(reader)
      val operations = List(reader.readInt()) { OperationMetaXdr.decode(reader) }
      val txChangesAfter = LedgerEntryChangesXdr.decode(reader)
      val sorobanMeta = if (reader.readBoolean()) SorobanTransactionMetaXdr.decode(reader) else null
      return TransactionMetaV3Xdr(ext, txChangesBefore, operations, txChangesAfter, sorobanMeta)
    }
  }

  fun encode(writer: XdrWriter) {
    ext.encode(writer)
    txChangesBefore.encode(writer)
    writer.writeInt(operations.size)
    operations.forEach { item ->
      item.encode(writer)
    }
    txChangesAfter.encode(writer)
    if (sorobanMeta != null) {
      writer.writeBoolean(true)
      sorobanMeta.encode(writer)
    } else {
      writer.writeBoolean(false)
    }
  }
}
