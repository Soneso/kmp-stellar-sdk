// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.stellar.sdk.xdr

/**
 * XDR Source:
 * struct SCSpecUDTEnumV0
 * {
 *     string doc<SC_SPEC_DOC_LIMIT>;
 *     string lib<80>;
 *     string name<60>;
 *     SCSpecUDTEnumCaseV0 cases<50>;
 * };
 */
data class SCSpecUDTEnumV0Xdr(
  val doc: String,
  val lib: String,
  val name: String,
  val cases: List<SCSpecUDTEnumCaseV0Xdr>
) {
  companion object {

    fun decode(reader: XdrReader): SCSpecUDTEnumV0Xdr {
      val doc = reader.readString()
      val lib = reader.readString()
      val name = reader.readString()
      val cases = List(reader.readInt()) { SCSpecUDTEnumCaseV0Xdr.decode(reader) }
      return SCSpecUDTEnumV0Xdr(doc, lib, name, cases)
    }
  }

  fun encode(writer: XdrWriter) {
    writer.writeString(doc)
    writer.writeString(lib)
    writer.writeString(name)
    writer.writeInt(cases.size)
    cases.forEach { item ->
      item.encode(writer)
    }
  }
}
