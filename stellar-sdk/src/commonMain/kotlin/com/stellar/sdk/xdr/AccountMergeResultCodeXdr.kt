// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.stellar.sdk.xdr

/**
 * XDR Source:
 * enum AccountMergeResultCode
 * {
 *     // codes considered as "success" for the operation
 *     ACCOUNT_MERGE_SUCCESS = 0,
 *     // codes considered as "failure" for the operation
 *     ACCOUNT_MERGE_MALFORMED = -1,       // can't merge onto itself
 *     ACCOUNT_MERGE_NO_ACCOUNT = -2,      // destination does not exist
 *     ACCOUNT_MERGE_IMMUTABLE_SET = -3,   // source account has AUTH_IMMUTABLE set
 *     ACCOUNT_MERGE_HAS_SUB_ENTRIES = -4, // account has trust lines/offers
 *     ACCOUNT_MERGE_SEQNUM_TOO_FAR = -5,  // sequence number is over max allowed
 *     ACCOUNT_MERGE_DEST_FULL = -6,       // can't add source balance to
 *                                         // destination balance
 *     ACCOUNT_MERGE_IS_SPONSOR = -7       // can't merge account that is a sponsor
 * };
 */
enum class AccountMergeResultCodeXdr(val value: Int) {
  /** codes considered as "success" for the operation */
  ACCOUNT_MERGE_SUCCESS(0),
  /**
   * codes considered as "failure" for the operation
   * can't merge onto itself
   */
  ACCOUNT_MERGE_MALFORMED(-1),
  /** destination does not exist */
  ACCOUNT_MERGE_NO_ACCOUNT(-2),
  /** source account has AUTH_IMMUTABLE set */
  ACCOUNT_MERGE_IMMUTABLE_SET(-3),
  /** account has trust lines/offers */
  ACCOUNT_MERGE_HAS_SUB_ENTRIES(-4),
  /** sequence number is over max allowed */
  ACCOUNT_MERGE_SEQNUM_TOO_FAR(-5),
  /** can't add source balance to */
  ACCOUNT_MERGE_DEST_FULL(-6),
  /**
   * destination balance
   * can't merge account that is a sponsor
   */
  ACCOUNT_MERGE_IS_SPONSOR(-7);

  companion object {

    fun decode(reader: XdrReader): AccountMergeResultCodeXdr {
      val value = reader.readInt()
      return entries.find { it.value == value }
        ?: throw IllegalArgumentException("Unknown AccountMergeResultCodeXdr value: $value")
    }
  }

  fun encode(writer: XdrWriter) {
    writer.writeInt(value)
  }
}
