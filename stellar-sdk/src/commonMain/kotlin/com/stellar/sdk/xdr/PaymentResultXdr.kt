// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.stellar.sdk.xdr

/**
 * XDR Source:
 * union PaymentResult switch (PaymentResultCode code)
 * {
 * case PAYMENT_SUCCESS:
 *     void;
 * case PAYMENT_MALFORMED:
 * case PAYMENT_UNDERFUNDED:
 * case PAYMENT_SRC_NO_TRUST:
 * case PAYMENT_SRC_NOT_AUTHORIZED:
 * case PAYMENT_NO_DESTINATION:
 * case PAYMENT_NO_TRUST:
 * case PAYMENT_NOT_AUTHORIZED:
 * case PAYMENT_LINE_FULL:
 * case PAYMENT_NO_ISSUER:
 *     void;
 * };
 */
sealed class PaymentResultXdr {
  abstract val discriminant: PaymentResultCodeXdr

  data class Void(
    override val discriminant: PaymentResultCodeXdr
  ) : PaymentResultXdr()

  companion object {

    fun decode(reader: XdrReader): PaymentResultXdr {
      val discriminant = PaymentResultCodeXdr.decode(reader)
      return when (discriminant) {
        PaymentResultCodeXdr.PAYMENT_SUCCESS -> Void(discriminant)
        PaymentResultCodeXdr.PAYMENT_MALFORMED -> Void(discriminant)
        PaymentResultCodeXdr.PAYMENT_UNDERFUNDED -> Void(discriminant)
        PaymentResultCodeXdr.PAYMENT_SRC_NO_TRUST -> Void(discriminant)
        PaymentResultCodeXdr.PAYMENT_SRC_NOT_AUTHORIZED -> Void(discriminant)
        PaymentResultCodeXdr.PAYMENT_NO_DESTINATION -> Void(discriminant)
        PaymentResultCodeXdr.PAYMENT_NO_TRUST -> Void(discriminant)
        PaymentResultCodeXdr.PAYMENT_NOT_AUTHORIZED -> Void(discriminant)
        PaymentResultCodeXdr.PAYMENT_LINE_FULL -> Void(discriminant)
        PaymentResultCodeXdr.PAYMENT_NO_ISSUER -> Void(discriminant)
        else -> throw IllegalArgumentException("Unknown PaymentResultXdr discriminant: $discriminant")
      }
    }
  }

  fun encode(writer: XdrWriter) {
    discriminant.encode(writer)
    when (this) {
      is Void -> {}
      is Void -> {}
    }
  }
}
