// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.stellar.sdk.xdr

/**
 * XDR Source:
 * struct ParallelTxsComponent
 * {
 *   int64* baseFee;
 *   // A sequence of stages that *may* have arbitrary data dependencies between
 *   // each other, i.e. in a general case the stage execution order may not be
 *   // arbitrarily shuffled without affecting the end result.
 *   ParallelTxExecutionStage executionStages<>;
 * };
 */
data class ParallelTxsComponentXdr(
  val baseFee: Int64Xdr?,
  val executionStages: List<ParallelTxExecutionStageXdr>
) {
  companion object {

    fun decode(reader: XdrReader): ParallelTxsComponentXdr {
      val baseFee = if (reader.readBoolean()) Int64Xdr.decode(reader) else null
      val executionStages = List(reader.readInt()) { ParallelTxExecutionStageXdr.decode(reader) }
      return ParallelTxsComponentXdr(baseFee, executionStages)
    }
  }

  fun encode(writer: XdrWriter) {
    if (baseFee != null) {
      writer.writeBoolean(true)
      baseFee.encode(writer)
    } else {
      writer.writeBoolean(false)
    }
    writer.writeInt(executionStages.size)
    executionStages.forEach { item ->
      item.encode(writer)
    }
  }
}
