// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.stellar.sdk.xdr

/**
 * XDR Source:
 * struct FeeBumpTransaction
 * {
 *     MuxedAccount feeSource;
 *     int64 fee;
 *     union switch (EnvelopeType type)
 *     {
 *     case ENVELOPE_TYPE_TX:
 *         TransactionV1Envelope v1;
 *     }
 *     innerTx;
 *     union switch (int v)
 *     {
 *     case 0:
 *         void;
 *     }
 *     ext;
 * };
 */
data class FeeBumpTransactionXdr(
  val feeSource: MuxedAccountXdr,
  val fee: Int64Xdr,
  val innerTx: FeeBumpTransactionInnerTxXdr,
  val ext: FeeBumpTransactionExtXdr
) {
  companion object {

    fun decode(reader: XdrReader): FeeBumpTransactionXdr {
      val feeSource = MuxedAccountXdr.decode(reader)
      val fee = Int64Xdr.decode(reader)
      val innerTx = FeeBumpTransactionInnerTxXdr.decode(reader)
      val ext = FeeBumpTransactionExtXdr.decode(reader)
      return FeeBumpTransactionXdr(feeSource, fee, innerTx, ext)
    }
  }

  fun encode(writer: XdrWriter) {
    feeSource.encode(writer)
    fee.encode(writer)
    innerTx.encode(writer)
    ext.encode(writer)
  }
}
