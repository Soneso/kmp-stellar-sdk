// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.stellar.sdk.xdr

/**
 * XDR Source:
 * struct
 *     {
 *         Hash networkID;
 *         int64 nonce;
 *         uint32 signatureExpirationLedger;
 *         SorobanAuthorizedInvocation invocation;
 *     }
 */
data class HashIDPreimageSorobanAuthorizationXdr(
  val networkId: HashXdr,
  val nonce: Int64Xdr,
  val signatureExpirationLedger: Uint32Xdr,
  val invocation: SorobanAuthorizedInvocationXdr
) {
  companion object {

    fun decode(reader: XdrReader): HashIDPreimageSorobanAuthorizationXdr {
      val networkId = HashXdr.decode(reader)
      val nonce = Int64Xdr.decode(reader)
      val signatureExpirationLedger = Uint32Xdr.decode(reader)
      val invocation = SorobanAuthorizedInvocationXdr.decode(reader)
      return HashIDPreimageSorobanAuthorizationXdr(networkId, nonce, signatureExpirationLedger, invocation)
    }
  }

  fun encode(writer: XdrWriter) {
    networkId.encode(writer)
    nonce.encode(writer)
    signatureExpirationLedger.encode(writer)
    invocation.encode(writer)
  }
}
