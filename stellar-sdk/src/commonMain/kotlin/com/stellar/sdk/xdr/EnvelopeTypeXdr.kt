// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.stellar.sdk.xdr

/**
 * XDR Source:
 * enum EnvelopeType
 * {
 *     ENVELOPE_TYPE_TX_V0 = 0,
 *     ENVELOPE_TYPE_SCP = 1,
 *     ENVELOPE_TYPE_TX = 2,
 *     ENVELOPE_TYPE_AUTH = 3,
 *     ENVELOPE_TYPE_SCPVALUE = 4,
 *     ENVELOPE_TYPE_TX_FEE_BUMP = 5,
 *     ENVELOPE_TYPE_OP_ID = 6,
 *     ENVELOPE_TYPE_POOL_REVOKE_OP_ID = 7,
 *     ENVELOPE_TYPE_CONTRACT_ID = 8,
 *     ENVELOPE_TYPE_SOROBAN_AUTHORIZATION = 9
 * };
 */
enum class EnvelopeTypeXdr(val value: Int) {
  ENVELOPE_TYPE_TX_V0(0),
  ENVELOPE_TYPE_SCP(1),
  ENVELOPE_TYPE_TX(2),
  ENVELOPE_TYPE_AUTH(3),
  ENVELOPE_TYPE_SCPVALUE(4),
  ENVELOPE_TYPE_TX_FEE_BUMP(5),
  ENVELOPE_TYPE_OP_ID(6),
  ENVELOPE_TYPE_POOL_REVOKE_OP_ID(7),
  ENVELOPE_TYPE_CONTRACT_ID(8),
  ENVELOPE_TYPE_SOROBAN_AUTHORIZATION(9);

  companion object {

    fun decode(reader: XdrReader): EnvelopeTypeXdr {
      val value = reader.readInt()
      return entries.find { it.value == value }
        ?: throw IllegalArgumentException("Unknown EnvelopeTypeXdr value: $value")
    }
  }

  fun encode(writer: XdrWriter) {
    writer.writeInt(value)
  }
}
