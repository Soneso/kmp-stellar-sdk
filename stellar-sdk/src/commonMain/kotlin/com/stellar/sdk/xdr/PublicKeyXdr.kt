// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.stellar.sdk.xdr

/**
 * XDR Source:
 * union PublicKey switch (PublicKeyType type)
 * {
 * case PUBLIC_KEY_TYPE_ED25519:
 *     uint256 ed25519;
 * };
 */
sealed class PublicKeyXdr {
  abstract val discriminant: PublicKeyTypeXdr

  data class Ed25519(
    val value: Uint256Xdr
  ) : PublicKeyXdr() {
    override val discriminant: PublicKeyTypeXdr = PublicKeyTypeXdr.PUBLIC_KEY_TYPE_ED25519
  }

  companion object {

    fun decode(reader: XdrReader): PublicKeyXdr {
      val discriminant = PublicKeyTypeXdr.decode(reader)
      return when (discriminant) {
        PublicKeyTypeXdr.PUBLIC_KEY_TYPE_ED25519 -> {
          val value = Uint256Xdr.decode(reader)
          Ed25519(value)
        }
        else -> throw IllegalArgumentException("Unknown PublicKeyXdr discriminant: $discriminant")
      }
    }
  }

  fun encode(writer: XdrWriter) {
    discriminant.encode(writer)
    when (this) {
      is Ed25519 -> {
        value.encode(writer)
      }
    }
  }
}
