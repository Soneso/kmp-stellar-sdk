// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.stellar.sdk.xdr

/**
 * XDR Source:
 * struct SCContractInstance {
 *     ContractExecutable executable;
 *     SCMap* storage;
 * };
 */
data class SCContractInstanceXdr(
  val executable: ContractExecutableXdr,
  val storage: SCMapXdr?
) {
  companion object {

    fun decode(reader: XdrReader): SCContractInstanceXdr {
      val executable = ContractExecutableXdr.decode(reader)
      val storage = if (reader.readBoolean()) SCMapXdr.decode(reader) else null
      return SCContractInstanceXdr(executable, storage)
    }
  }

  fun encode(writer: XdrWriter) {
    executable.encode(writer)
    if (storage != null) {
      writer.writeBoolean(true)
      storage.encode(writer)
    } else {
      writer.writeBoolean(false)
    }
  }
}
