// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.stellar.sdk.xdr

/**
 * XDR Source:
 * union switch (int v)
 *     {
 *     case 0:
 *         void;
 *     case 2:
 *         AccountEntryExtensionV2 v2;
 *     }
 */
sealed class AccountEntryExtensionV1ExtXdr {
  abstract val discriminant: Int

  data class V2(
    val value: AccountEntryExtensionV2Xdr
  ) : AccountEntryExtensionV1ExtXdr() {
    override val discriminant: Int = 2
  }

  data object Void : AccountEntryExtensionV1ExtXdr() {
    override val discriminant: Int = 0
  }

  companion object {

    fun decode(reader: XdrReader): AccountEntryExtensionV1ExtXdr {
      val discriminant = reader.readInt()
      return when (discriminant) {
        0 -> Void
        2 -> {
          val value = AccountEntryExtensionV2Xdr.decode(reader)
          V2(value)
        }
        else -> throw IllegalArgumentException("Unknown AccountEntryExtensionV1ExtXdr discriminant: $discriminant")
      }
    }
  }

  fun encode(writer: XdrWriter) {
    writer.writeInt(discriminant)
    when (this) {
      is Void -> {}
      is V2 -> {
        value.encode(writer)
      }
    }
  }
}
