// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.stellar.sdk.xdr

/**
 * XDR Source:
 * union CreateAccountResult switch (CreateAccountResultCode code)
 * {
 * case CREATE_ACCOUNT_SUCCESS:
 *     void;
 * case CREATE_ACCOUNT_MALFORMED:
 * case CREATE_ACCOUNT_UNDERFUNDED:
 * case CREATE_ACCOUNT_LOW_RESERVE:
 * case CREATE_ACCOUNT_ALREADY_EXIST:
 *     void;
 * };
 */
sealed class CreateAccountResultXdr {
  abstract val discriminant: CreateAccountResultCodeXdr

  data class Void(
    override val discriminant: CreateAccountResultCodeXdr
  ) : CreateAccountResultXdr()

  companion object {

    fun decode(reader: XdrReader): CreateAccountResultXdr {
      val discriminant = CreateAccountResultCodeXdr.decode(reader)
      return when (discriminant) {
        CreateAccountResultCodeXdr.CREATE_ACCOUNT_SUCCESS -> Void(discriminant)
        CreateAccountResultCodeXdr.CREATE_ACCOUNT_MALFORMED -> Void(discriminant)
        CreateAccountResultCodeXdr.CREATE_ACCOUNT_UNDERFUNDED -> Void(discriminant)
        CreateAccountResultCodeXdr.CREATE_ACCOUNT_LOW_RESERVE -> Void(discriminant)
        CreateAccountResultCodeXdr.CREATE_ACCOUNT_ALREADY_EXIST -> Void(discriminant)
        else -> throw IllegalArgumentException("Unknown CreateAccountResultXdr discriminant: $discriminant")
      }
    }
  }

  fun encode(writer: XdrWriter) {
    discriminant.encode(writer)
    when (this) {
      is Void -> {}
      is Void -> {}
    }
  }
}
