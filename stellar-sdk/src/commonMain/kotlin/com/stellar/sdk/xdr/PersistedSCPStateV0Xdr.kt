// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.stellar.sdk.xdr

/**
 * XDR Source:
 * struct PersistedSCPStateV0
 * {
 * 	SCPEnvelope scpEnvelopes<>;
 * 	SCPQuorumSet quorumSets<>;
 * 	StoredTransactionSet txSets<>;
 * };
 */
data class PersistedSCPStateV0Xdr(
  val scpEnvelopes: List<SCPEnvelopeXdr>,
  val quorumSets: List<SCPQuorumSetXdr>,
  val txSets: List<StoredTransactionSetXdr>
) {
  companion object {

    fun decode(reader: XdrReader): PersistedSCPStateV0Xdr {
      val scpEnvelopes = List(reader.readInt()) { SCPEnvelopeXdr.decode(reader) }
      val quorumSets = List(reader.readInt()) { SCPQuorumSetXdr.decode(reader) }
      val txSets = List(reader.readInt()) { StoredTransactionSetXdr.decode(reader) }
      return PersistedSCPStateV0Xdr(scpEnvelopes, quorumSets, txSets)
    }
  }

  fun encode(writer: XdrWriter) {
    writer.writeInt(scpEnvelopes.size)
    scpEnvelopes.forEach { item ->
      item.encode(writer)
    }
    writer.writeInt(quorumSets.size)
    quorumSets.forEach { item ->
      item.encode(writer)
    }
    writer.writeInt(txSets.size)
    txSets.forEach { item ->
      item.encode(writer)
    }
  }
}
