// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.stellar.sdk.xdr

/**
 * XDR Source:
 * struct
 *         {
 *             LiquidityPoolConstantProductParameters params;
 * 
 *             int64 reserveA;        // amount of A in the pool
 *             int64 reserveB;        // amount of B in the pool
 *             int64 totalPoolShares; // total number of pool shares issued
 *             int64 poolSharesTrustLineCount; // number of trust lines for the
 *                                             // associated pool shares
 *         }
 */
data class LiquidityPoolEntryConstantProductXdr(
  val params: LiquidityPoolConstantProductParametersXdr,
  /** amount of A in the pool */
  val reserveA: Int64Xdr,
  /** amount of B in the pool */
  val reserveB: Int64Xdr,
  /** total number of pool shares issued */
  val totalPoolShares: Int64Xdr,
  /** number of trust lines for the */
  val poolSharesTrustLineCount: Int64Xdr
) {
  companion object {

    fun decode(reader: XdrReader): LiquidityPoolEntryConstantProductXdr {
      val params = LiquidityPoolConstantProductParametersXdr.decode(reader)
      val reserveA = Int64Xdr.decode(reader)
      val reserveB = Int64Xdr.decode(reader)
      val totalPoolShares = Int64Xdr.decode(reader)
      val poolSharesTrustLineCount = Int64Xdr.decode(reader)
      return LiquidityPoolEntryConstantProductXdr(params, reserveA, reserveB, totalPoolShares, poolSharesTrustLineCount)
    }
  }

  fun encode(writer: XdrWriter) {
    params.encode(writer)
    reserveA.encode(writer)
    reserveB.encode(writer)
    totalPoolShares.encode(writer)
    poolSharesTrustLineCount.encode(writer)
  }
}
