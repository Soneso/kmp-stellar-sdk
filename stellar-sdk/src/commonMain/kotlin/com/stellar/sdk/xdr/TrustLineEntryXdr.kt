// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.stellar.sdk.xdr

/**
 * XDR Source:
 * struct TrustLineEntry
 * {
 *     AccountID accountID;  // account this trustline belongs to
 *     TrustLineAsset asset; // type of asset (with issuer)
 *     int64 balance;        // how much of this asset the user has.
 *                           // Asset defines the unit for this;
 * 
 *     int64 limit;  // balance cannot be above this
 *     uint32 flags; // see TrustLineFlags
 * 
 *     // reserved for future use
 *     union switch (int v)
 *     {
 *     case 0:
 *         void;
 *     case 1:
 *         struct
 *         {
 *             Liabilities liabilities;
 * 
 *             union switch (int v)
 *             {
 *             case 0:
 *                 void;
 *             case 2:
 *                 TrustLineEntryExtensionV2 v2;
 *             }
 *             ext;
 *         } v1;
 *     }
 *     ext;
 * };
 */
data class TrustLineEntryXdr(
  /** account this trustline belongs to */
  val accountId: AccountIDXdr,
  /** type of asset (with issuer) */
  val asset: TrustLineAssetXdr,
  /** how much of this asset the user has. */
  val balance: Int64Xdr,
  /**
   * Asset defines the unit for this;
   * balance cannot be above this
   */
  val limit: Int64Xdr,
  /** see TrustLineFlags */
  val flags: Uint32Xdr,
  val ext: TrustLineEntryExtXdr
) {
  companion object {

    fun decode(reader: XdrReader): TrustLineEntryXdr {
      val accountId = AccountIDXdr.decode(reader)
      val asset = TrustLineAssetXdr.decode(reader)
      val balance = Int64Xdr.decode(reader)
      val limit = Int64Xdr.decode(reader)
      val flags = Uint32Xdr.decode(reader)
      val ext = TrustLineEntryExtXdr.decode(reader)
      return TrustLineEntryXdr(accountId, asset, balance, limit, flags, ext)
    }
  }

  fun encode(writer: XdrWriter) {
    accountId.encode(writer)
    asset.encode(writer)
    balance.encode(writer)
    limit.encode(writer)
    flags.encode(writer)
    ext.encode(writer)
  }
}
