// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.stellar.sdk.xdr

/**
 * XDR Source:
 * enum PathPaymentStrictReceiveResultCode
 * {
 *     // codes considered as "success" for the operation
 *     PATH_PAYMENT_STRICT_RECEIVE_SUCCESS = 0, // success
 * 
 *     // codes considered as "failure" for the operation
 *     PATH_PAYMENT_STRICT_RECEIVE_MALFORMED = -1, // bad input
 *     PATH_PAYMENT_STRICT_RECEIVE_UNDERFUNDED =
 *         -2, // not enough funds in source account
 *     PATH_PAYMENT_STRICT_RECEIVE_SRC_NO_TRUST =
 *         -3, // no trust line on source account
 *     PATH_PAYMENT_STRICT_RECEIVE_SRC_NOT_AUTHORIZED =
 *         -4, // source not authorized to transfer
 *     PATH_PAYMENT_STRICT_RECEIVE_NO_DESTINATION =
 *         -5, // destination account does not exist
 *     PATH_PAYMENT_STRICT_RECEIVE_NO_TRUST =
 *         -6, // dest missing a trust line for asset
 *     PATH_PAYMENT_STRICT_RECEIVE_NOT_AUTHORIZED =
 *         -7, // dest not authorized to hold asset
 *     PATH_PAYMENT_STRICT_RECEIVE_LINE_FULL =
 *         -8, // dest would go above their limit
 *     PATH_PAYMENT_STRICT_RECEIVE_NO_ISSUER = -9, // missing issuer on one asset
 *     PATH_PAYMENT_STRICT_RECEIVE_TOO_FEW_OFFERS =
 *         -10, // not enough offers to satisfy path
 *     PATH_PAYMENT_STRICT_RECEIVE_OFFER_CROSS_SELF =
 *         -11, // would cross one of its own offers
 *     PATH_PAYMENT_STRICT_RECEIVE_OVER_SENDMAX = -12 // could not satisfy sendmax
 * };
 */
enum class PathPaymentStrictReceiveResultCodeXdr(val value: Int) {
  /**
   * codes considered as "success" for the operation
   * success
   */
  PATH_PAYMENT_STRICT_RECEIVE_SUCCESS(0),
  /**
   * codes considered as "failure" for the operation
   * bad input
   */
  PATH_PAYMENT_STRICT_RECEIVE_MALFORMED(-1),
  PATH_PAYMENT_STRICT_RECEIVE_UNDERFUNDED(-2),
  PATH_PAYMENT_STRICT_RECEIVE_SRC_NO_TRUST(-3),
  PATH_PAYMENT_STRICT_RECEIVE_SRC_NOT_AUTHORIZED(-4),
  PATH_PAYMENT_STRICT_RECEIVE_NO_DESTINATION(-5),
  PATH_PAYMENT_STRICT_RECEIVE_NO_TRUST(-6),
  PATH_PAYMENT_STRICT_RECEIVE_NOT_AUTHORIZED(-7),
  PATH_PAYMENT_STRICT_RECEIVE_LINE_FULL(-8),
  /** missing issuer on one asset */
  PATH_PAYMENT_STRICT_RECEIVE_NO_ISSUER(-9),
  PATH_PAYMENT_STRICT_RECEIVE_TOO_FEW_OFFERS(-10),
  PATH_PAYMENT_STRICT_RECEIVE_OFFER_CROSS_SELF(-11),
  /** could not satisfy sendmax */
  PATH_PAYMENT_STRICT_RECEIVE_OVER_SENDMAX(-12);

  companion object {

    fun decode(reader: XdrReader): PathPaymentStrictReceiveResultCodeXdr {
      val value = reader.readInt()
      return entries.find { it.value == value }
        ?: throw IllegalArgumentException("Unknown PathPaymentStrictReceiveResultCodeXdr value: $value")
    }
  }

  fun encode(writer: XdrWriter) {
    writer.writeInt(value)
  }
}
