// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package com.stellar.sdk.xdr

/**
 * XDR Source:
 * struct
 *   {
 *     int64* baseFee;
 *     TransactionEnvelope txs<>;
 *   }
 */
data class TxSetComponentTxsMaybeDiscountedFeeXdr(
  val baseFee: Int64Xdr?,
  val txs: List<TransactionEnvelopeXdr>
) {
  companion object {

    fun decode(reader: XdrReader): TxSetComponentTxsMaybeDiscountedFeeXdr {
      val baseFee = if (reader.readBoolean()) Int64Xdr.decode(reader) else null
      val txs = List(reader.readInt()) { TransactionEnvelopeXdr.decode(reader) }
      return TxSetComponentTxsMaybeDiscountedFeeXdr(baseFee, txs)
    }
  }

  fun encode(writer: XdrWriter) {
    if (baseFee != null) {
      writer.writeBoolean(true)
      baseFee.encode(writer)
    } else {
      writer.writeBoolean(false)
    }
    writer.writeInt(txs.size)
    txs.forEach { item ->
      item.encode(writer)
    }
  }
}
